This patch fixes an error complaining "`loc1@GLIBC_2.2.5' can't
be versioned to common symbol 'loc1'", 'loc2', and 'locs'.
Turns out we just need to initialize the three nocommon attribute.
This only happens in binutils 2.29(+?) apparently.

Source: https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=388b4f1a02f3a801965028bbfcd48d905638b797

--- a/misc/regexp.c
+++ b/misc/regexp.c
@@ -30,13 +30,13 @@
 #if SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_23)

 /* Define the variables used for the interface.  */
-char *loc1;
-char *loc2;
+char *loc1 __attribute__ ((nocommon));
+char *loc2 __attribute__ ((nocommon));
 compat_symbol (libc, loc1, loc1, GLIBC_2_0);
 compat_symbol (libc, loc2, loc2, GLIBC_2_0);

 /* Although we do not support the use we define this variable as well.  */
-char *locs;
+char *locs __attribute__ ((nocommon));
 compat_symbol (libc, locs, locs, GLIBC_2_0);


